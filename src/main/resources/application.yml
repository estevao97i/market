spring:
  datasource:
    # url de conexão do banco de dados
    url: jdbc:postgresql://localhost:5434/market_db?autoreconnect=true
    # username criado
    username: market_db
    # password criado
    password: 123
#    driver-class-name: org.postgres.Driver
#    platform: postgres

    # gerencia um pool de conexões com banco de dados
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # numero máximo de millisegundos que um cliente aguardará por uma conexão
      connection-timeout: 20000
      # numero mínimo de conexões inativas mantidas pelo HikariCP em um conjunto de conexões
      minimum-idle: 200
      # numero maximo de conexoes ativas (pool de conexão)
      maximum-pool-size: 350
      # tempo ocioso para conexao
      idle-timeout: 10000
      # nome do pool
      pool-name: PoolHikari
      # auto commit -> false ---(quem vai gerenciar essa parte tem que ser o spring)---
      auto-commit: false

    dbcp2:
      # colocar um pool nos statements
      pool-prepared-statements: true
      # maximo de portas abertas para conexões no banco de dados
      max-open-prepared-statements: 350

  jpa:
    show-sql: true
    properties:
      hibernate:
        jdbc:
          # gargalo caso tenha muitas requisições sql
          batch_size: 4
        order_inserts: true
        order_updates: true
#        mostra os dados do sql no log
        format_sql: true
        temp:
#          gerencia metadados e evita erros no projeto
          use_jdbc_metadata_defaults: true
#          mostra pro hibernate qual linguagem deve usar de banco de dados
        dialect: org.hibernate.dialect.PostgreSQLDialect
#        mostra pro hibernate a plataforma que deve usar de banco de dados
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    hibernate:
#      atualiza toda vez que roda o banco
      ddl-auto: update

  servlet:
    multipart:
#      maior arquivo suportado no projeto
      max-file-size: 10000KB
#      maior requisição suportada no projeto
      max-request-size: 10000KB
#      se está habilitado upload
      enabled: true

  http:
    encoding:
      # codificação aceita caracteres do português
      charset: UTF-8
      # habilita o utf-8
      enabled: true
      # força o utf-8
      force: true
      # força na requisição
      force-request: true
      # força na resposta
      force-response: true

  transaction:
    # rollback caso de algum erro commit no banco
    rollback-on-commit-failure: true

  session:
    jdbc:
      # limpar tarefas que não estão sendo mais utilizadas (limpar sujeira)
      cleanup-cron: 0 0 4 * * *

  mvc:
    static-path-pattern: /resources/static/**


server:
  servlet:
#    o path do projeto vai rodar nesse context-path (localhost:8080/context-path)
    context-path: /loja_virtual
    # o tanto de tempo que dura a sessão do usuário sem expirar
    session-timeout: 240m
  compression:
    # diminui o tanto de dados que vai transitar entre o servidor (compressão de dados)
    enabled: true
    # tipos que serão comprimidos
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    # tamanho mínimo de compressão
    min-response-size: 1024
  http2:
    # http2 é um protocolo mais performático da web
    enabled: true
  tomcat:
    # maximo que o servidor tomcat vai receber de requisições
    max-connections: 50000
    # processamento por debaixo dos panos
    min-spare-threads: 1000

